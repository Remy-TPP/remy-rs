version: '3.7'

services:
  db:
    image: postgres:11
    ports:
      - "${DB_PORT}:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}

  # Airflow

  airflow_db:
    image: postgres:11
    environment:
      POSTGRES_DB: airflow_db
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow

  airflow_webserver:
    image: apache/airflow:1.10.14-python3.8
    hostname: webserver
    restart: always
    depends_on:
      - airflow_db
    env_file:
      - .airflow.env
    volumes:
      - ./scripts:/opt/airflow/scripts
      - ./remy_rs/dags:/opt/airflow/dags
      - ./airflow-logs:/opt/airflow/logs
    ports:
      - "${AIRFLOW_PORT}:8080"
    entrypoint: ./scripts/airflow_webserver_entrypoint.sh
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3

  app:  # App + Airflow scheduler
    build:
      target: ${ENV}  # Either dev or production
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - db  # TODO: remove later?
      - airflow_db
      - airflow_webserver
    ports:
      - "8793:8793"
      - "8000:8000"
      - "8001:8001"
    volumes:
      - ./scripts:/opt/airflow/scripts
      - ./remy_rs/dags:/opt/airflow/dags
      - ./airflow-logs:/opt/airflow/logs
      - ./remy_rs:/opt/airflow/remy_rs  # TODO: move to a different container?
    env_file:
      - .env
      - .airflow.env
    environment:
      ENV: dev
      DB_HOST: db
      DB_PORT: 5432
      PYTHONPATH: .
      AIRFLOW_PORT: 8080
      API_PORT: 8000
    command: /entrypoint bash ./scripts/appserver_entrypoint.sh
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-scheduler.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
